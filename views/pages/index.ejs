<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap-theme.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <title>API help page</title>
    <img alt="node_logo.png" src="http://www.geo-complex.com/images/node_logo.png" </img> <br>
</head>

<body >
    <div style="margin:10px;width:auto" class="col-md-5">
        <!-- «col-md-7»указывают, что блоки представляют из себя колонки шириной 7 относительно родительского контейнера -->

        <div class="jumbotron" style="padding:20px">
            <h2>
                <%=servicename%> v
                <%=version %>
            </h2>
            <br>
            <h7> Service start at:
                <%=startdate %>
                <br> listen port:
                <%=port %>
            </h7>
            <br> <br> Please specify you request.<br>

            <br> Example:

            <br>
            <li> To find object: <br>
                <a onclick="FindGKNData('26:01:000000:511');">server/node/find?CNumber=99:88:112233:65536</a> </li>
            <div id="gkn_res">  </div>
            <br>
            <li> To find EGRZ object: <br>
                JSON format <br>
                <a onclick="FindFBData('json','26:05:041308:1');">server/node/fb/egrz/find?f=json&cn=26:05:041308:1</a> </li>
                <div id="fb_res">  </div>
                HTML format <br>
                <a onclick="FindFBData('html', '26:05:041308:1');">server/node/fb/egrz/find?f=html&cn=26:05:041308:1</a> </li>
            <br>
            <li>
                To find here:
                <input class="form-control" id="inputFB_cn" maxlength="200" value='26:05:041308:1' name="numregfb"
                    placeholder="Номер записи" style="display: inline-block; width: 150px" type="text" />

                <a class="btn btn-primary btn-sm" role="button" onclick="FindFBData('html',jQuery('#inputFB_cn').val());" id="NewQueryButton">
                    Найти
                    объект</a>
            </li>


            <li>
                Sign file :
                <input class="form-control" id="CertName" maxlength="200" value='26:05:041308:1' name="numregfb"
                    placeholder="Номер записи" style="display: inline-block; width: 150px" type="text" />

                <a class="btn btn-primary btn-sm" role="button" onclick="run();" id="NewQueryButton">
                    Найти
                    объект</a>
            </li>


        </div>
    </div>
    <br><br><br>
</body>

<footer style="width:auto;background-color:darkgray">
    @2019 Fixosoft
</footer>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
<script language="javascript" src="http://www.geo-complex.com/js/cadesplugin_api.js"></script>
<script>
    function FindFBData(format, cn) {
        if ((window.location.host == 'localhost:3050') ||
            (window.location.host == '127.0.0.1:3050'))
            reqUrlprefix = ""
        else reqUrlprefix = "/node";

        jQuery.get(reqUrlprefix + '/fb/egrz/find?f='+ format+ '&cn=' + cn, function callback(data, status, jqXHR) {
            if (jqXHR.status == 200) {
                 if (format ==='html')   
                $("body").html(data);
                else 
                document.getElementById('fb_res').innerHTML = jqXHR.responseText;
            };
        });
    };

    function FindGKNData(cn) {
        if ((window.location.host == 'localhost:3050') ||
            (window.location.host == '127.0.0.1:3050'))
            reqUrlprefix = ""
        else reqUrlprefix = "/node";

        jQuery.get(reqUrlprefix + '/find?CNumber=' + cn, function callback(data, status, jqXHR) {
            if (jqXHR.status == 200) {
                //Parse JSON
                /*
                var queryResult = jQuery.parseJSON(jqXHR.responseText);
                jQuery.each(queryResult.query, function (index, value) {
                    document.getElementById('gkn_res').innerHTML = value.lot_kn + " (" + value.lottable_id +
                        ")";
                });
                */
                document.getElementById('gkn_res').innerHTML = jqXHR.responseText;
            };


        });
    };

    //CADES 


var CADESCOM_CADES_BES = 1;
var CAPICOM_CURRENT_USER_STORE = 2;
var CAPICOM_MY_STORE = "My";
var CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED = 2;
var CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME = 1;

function SignCreate(certSubjectName, dataToSign) {
    return new Promise(function(resolve, reject){
        cadesplugin.async_spawn(function *(args) {
            try {
                var oStore = yield cadesplugin.CreateObjectAsync("CAdESCOM.Store");
                yield oStore.Open(CAPICOM_CURRENT_USER_STORE, CAPICOM_MY_STORE,
                    CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);

                var CertificatesObj = yield oStore.Certificates;
                var oCertificates = yield CertificatesObj.Find(
                    CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME, certSubjectName);

                var Count = yield oCertificates.Count;
                if (Count == 0) {
                    throw("Certificate not found: " + args[0]);
                }
                var oCertificate = yield oCertificates.Item(1);
                var oSigner = yield cadesplugin.CreateObjectAsync("CAdESCOM.CPSigner");
                yield oSigner.propset_Certificate(oCertificate);

                var oSignedData = yield cadesplugin.CreateObjectAsync("CAdESCOM.CadesSignedData");
                yield oSignedData.propset_Content(dataToSign);

                var sSignedMessage = yield oSignedData.SignCades(oSigner, CADESCOM_CADES_BES);

                yield oStore.Close();

                args[2](sSignedMessage);
            }
            catch (e)
            {
                args[3]("Failed to create signature. Error: " + cadesplugin.getLastError(err));
            }
        }, certSubjectName, dataToSign, resolve, reject);
    });
}

function run() {
    var oCertName = document.getElementById("CertName");
    var sCertName = oCertName.value;
    if ("" == sCertName) {
        alert("Введите имя сертификата (CN).");
        return;
    }
    var thenable = SignCreate(sCertName, "Message");

    thenable.then(
        function (result){
            document.getElementById("signature").innerHTML = result;
        },
        function (result){
            document.getElementById("signature").innerHTML = result;
        });
}



</script>

</html>